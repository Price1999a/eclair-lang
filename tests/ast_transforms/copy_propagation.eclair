// RUN: split-file %s %t
// RUN: %eclair compile --emit ast-simplified %t/program.eclair > %t/actual.out
// RUN: diff %t/expected.out %t/actual.out

//--- program.eclair
@def fact1(u32, u32) input.
@def fact2(u32) output.

fact2(x) :-
  x = y,
  fact1(x, z),
  y = z.

fact2(x) :-
  x = y,
  y = z,
  fact1(x, z).

fact2(x) :-
  z = x,
  x = y,
  y = z,
  fact1(x, z).

fact2(x) :-
  y = x,
  y = z,
  fact1(x, z).

fact2(x) :-
  z = x,
  fact1(x, z).

//--- expected.out
@def fact1(u32, u32) input.

@def fact2(u32) output.

fact2(z) :-
  fact1(z, @z_0),
  z = @z_0.

fact2(z) :-
  fact1(z, @z_0),
  z = @z_0.

fact2(z) :-
  fact1(z, @z_0),
  z = @z_0.

fact2(z) :-
  fact1(z, @z_0),
  z = @z_0.

fact2(z) :-
  fact1(z, @z_0),
  z = @z_0.
