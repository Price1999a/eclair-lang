// RUN: split-file %s %t
// RUN: %eclair compile --emit ast-transformed %t/program.eclair > %t/actual.out
// RUN: diff %t/expected.out %t/actual.out

//--- program.eclair
@def fact1(u32, u32) input.
@def fact2(u32) output.
@def fact3(u32) input.
@def fact4(u32, u32) output.
@def fact5(u32) output.

fact2(x) :-
  x = y,
  fact1(x, z),
  y = z.

fact2(x) :-
  x = y,
  y = z,
  fact1(x, z).

fact2(x) :-
  z = x,
  x = y,
  y = z,
  fact1(x, z).

fact2(x) :-
  y = x,
  y = z,
  fact1(x, z).

fact2(x) :-
  z = x,
  fact1(x, z).

fact4(y, z) :-
  fact3(x),
  y = x + 3,
  y = x - 1,
  y = z + y,
  z = y + x.

fact5(y) :-
  fact3(x),
  y = x + 3.

//--- expected.out
@def fact1(u32, u32) input.

@def fact2(u32) output.

@def fact3(u32) input.

@def fact4(u32, u32) output.

@def fact5(u32) output.

fact2(x) :-
  fact1(x, z),
  x = z.

fact2(x) :-
  fact1(x, z),
  x = z.

fact2(x) :-
  fact1(x, z),
  z = x,
  x = z.

fact2(x) :-
  fact1(x, z),
  z = x.

fact2(x) :-
  fact1(x, z),
  z = x.

fact4((x - 1), ((x - 1) + x)) :-
  fact3(x),
  (x - 1) = (x + 3),
  (x - 1) = (((x - 1) + x) + (x - 1)).

fact5((x + 3)) :-
  fact3(x).
